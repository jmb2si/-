<?xml version="1.0"?>
<launch>

    <!-- Set to true, you can jump out of a GUI box, the joint angle motion range is read from URDF, 
    drag the progress bar to change the joint value of the robot, and let the robot move. -->
    <param name="use_gui" value="true"/>

    <arg name="paused" default="false"/>
    <arg name="gui" default="true"/>
    <!-- <arg name="urdf_path" default="$(find trex_gripper_urdf)/urdf/trex_gripper_urdf.urdf"/> -->
    <arg name="urdf_path" default="$(find mrcp_trex_gripper_description)/urdf/mrcp_trex_gripper.urdf"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>


    <!-- startup simulated world -->
    <!-- We resume the logic in empty_world.launch -->
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find mrcp_trex_gripper_description)/worlds/empty_world.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- send MRCP and TREX robot urdf to param server -->
    <param name="robot_description" textfile="$(arg urdf_path)" /> 

    <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model mrcp_trex_gripper -x 0.0 -y 0.0 -z 0.0"
    respawn="false" output="screen" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find mrcp_trex_gripper_gazebo)/config/mrcp_trex_gripper_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/mrcp_trex_gripper" args="joint_state_controller joint1_position_controller joint2_position_controller
                joint3_position_controller joint4_position_controller joint5_position_controller
                Right_Rocker_position_controller    Left_Rocker_position_controller 
				Right_Bogie_position_controller     Left_Bogie_position_controller
				Servo1_position_controller          Servo2_position_controller
				Servo3_position_controller          Servo4_position_controller
				Motor1_velocity_controller          Motor2_velocity_controller
				Motor3_velocity_controller          Motor4_velocity_controller
				Motor5_velocity_controller          Motor6_velocity_controller"/>


    <!--  If it is in the roslaunch file, it is globally effective. The above code can also be placed in the node, such as -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="use_gui" value="true"/>
    </node>

    <!-- Read the data of /joint_states and publish it to /tf and /tf_static -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!--  .............................   tf   ......................................... -->
    <!-- tf is a package that lets the user keep track of multiple coordinate frames over time. 
    tf maintains the relationship between coordinate frames in a tree structure buffered in time, 
    and lets the user transform points, vectors, etc between any two coordinate frames at any desired point in time.  -->


    <!-- static_transform_publisher x y z yaw pitch roll frame_id child_frame_id period_in_ms  -->
    <!-- Publish a static coordinate transform to tf using an x/y/z offset in meters and yaw/pitch/roll in radians. 
    (yaw is rotation about Z, pitch is rotation about Y, and roll is rotation about X). 
    The period, in milliseconds, specifies how often to send a transform. 100ms (10hz) is a good value.  -->

    <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args = "0 0 0 0 0 0 world link_1 10" />
    <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args = "0 0 0 0 0 0 world map 10" /> 

</launch>
