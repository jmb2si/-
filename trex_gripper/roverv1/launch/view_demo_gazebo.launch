<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="empty"/> 
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find roverv1)/worlds/roverv1.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
 <param name="use_gui" value="true"/>

<!-- Load the URDF into the ROS Parameter Server --> 
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find roverv1)/urdf/model.xacro'"/>
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
   args="-urdf -param robot_description -model roverv1" />




 <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find roverv1)/config/roverv1_control.yaml" command="load"/>


    <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" ns="/roverv1" args="joint_state_controller
				Right_Rocker_position_controller 
				Left_Rocker_position_controller 
				Right_Bogie_position_controller
				Left_Bogie_position_controller
				Servo1_position_controller
				Servo2_position_controller
				Servo3_position_controller
				Servo4_position_controller
				Motor1_velocity_controller
				Motor2_velocity_controller
				Motor3_velocity_controller
				Motor4_velocity_controller
				Motor5_velocity_controller
				Motor6_velocity_controller"/>



  




  <node name="rover_control_node" pkg="roverv1" type="mvmt_control_node.py" />
  <node name="convert_rqt_to_rover" pkg="roverv1" type="convert_rqt_to_rover.py" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/roverv1/joint_states" />
  </node>





</launch>
